{"version":3,"sources":["logo.svg","components/TopNavBar/Button/Button.js","components/TopNavBar/SideNavBar/SideNavBar.js","components/TopNavBar/TopNavBar/TopNavBar.js","components/Home/Home.js","components/Forum/Input/Input.js","components/Forum/Post/Post.js","components/Forum/PostList/PostList.js","components/Forum/Input/Image.js","components/Forum/Forum/Forum.js","components/Announcements/Post/Post.js","components/Announcements/PostList/PostList.js","components/Announcements/Announcements/Announcements.js","components/MedicalInfo/MedicalInfo.js","components/TopNavBar/PageSelect/PageSelect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","react_default","a","createElement","index_es","icon","className","onClick","this","props","React","Component","SideNavBar","simple_sidenav_default","showNav","handleNav","onHideNav","title","titleStyle","backgroundColor","items","buttonClick","itemStyle","padding","color","itemHoverStyle","TopNavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleClick","bind","assertThisInitialized","handleButton","setState","e","event","currentTarget","innerHTML","clickHome","clickForum","clickAnnouncements","clickMedicalInfo","_this2","TopNavBar_Button_Button","TopNavBar_SideNavBar_SideNavBar","Home","Input","key","target","value","alert","postIncident","preventDefault","placeholder","onKeyPress","handleKeyPress","id","required","Post","message","PostList","postList","map","Forum_Post_Post","Image","file","onFormSubmit","onChange","FormData","append","files","onSubmit","type","name","Forum","list","unshift","Forum_Input_Input","Forum_Input_Image","Forum_PostList_PostList","components_Announcements_Post_Post","username","socket","emit","user_name","Announcements_PostList_PostList","MedicalInfo","PageSelect","showHome","components_Home_Home","showForum","components_Forum_Forum_Forum","showAnnouncements","Announcements_Announcements","showMedicalInfo","components_MedicalInfo_MedicalInfo","selectPage","page","pageSelect","library","add","faBars","faFire","faTrafficLight","faHome","App","show","selectHome","selectAnnouncements","selectForum","selectMedicalInfo","components_TopNavBar_TopNavBar_TopNavBar","TopNavBar_PageSelect_PageSelect","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67d7f72d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dbbb8059.svg\";","import React from 'react';\nimport './Button.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <FontAwesomeIcon icon=\"bars\" className=\"button\" onClick={this.props.onClick}/>\n    )\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport SideNav from 'react-simple-sidenav';\nimport './SideNavBar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass SideNavBar extends React.Component {\n  render() {\n    return (\n      <div className=\"sideNavBar\">\n        <SideNav\n          showNav={this.props.handleNav}\n          onHideNav={this.props.onHideNav}\n          title={<div className=\"sidebarTitle\">ReliefGrid</div>}\n          titleStyle={{backgroundColor: '#3DB2C2'}}\n          items={[\n            <div className=\"subpages\" onClick={this.props.buttonClick}>Home</div>,\n            <div className=\"subpages\" onClick={this.props.buttonClick}>Announcements</div>,\n            <div className=\"subpages\" onClick={this.props.buttonClick}>Message Board</div>,\n            <div className=\"subpages\" onClick={this.props.buttonClick}>Medical Guide</div>]}\n          itemStyle      =  {{backgroundColor: '#fff', padding: 0, color: '#565656'}}\n          itemHoverStyle =  {{backgroundColor: '#C93461', color: 'aliceblue'}} />\n      </div>\n    )\n  }\n}\n\nexport default SideNavBar;\n","import React from 'react';\nimport Button from '../Button/Button.js';\nimport SideNavBar from '../SideNavBar/SideNavBar.js';\nimport './TopNavBar.css';\n\nclass TopNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNav: false\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  handleClick() {\n    if (this.state.showNav === false) {\n      this.setState({\n        showNav: true\n      })\n    }\n  }\n\n  handleButton(e) {\n    this.setState({\n      showNav: false\n    })\n    let event = e.currentTarget.innerHTML;\n    if (event === \"Home\") {\n      this.props.clickHome();\n    } else if (event === \"Message Board\") {\n      this.props.clickForum();\n    } else if (event === \"Announcements\") {\n      this.props.clickAnnouncements();\n    } else if (event === \"Medical Guide\") {\n      this.props.clickMedicalInfo();\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"topNav\">\n        <div className=\"topNavContainer\">\n          <div className=\"buttonColumn\">\n            <Button onClick={this.handleClick} />\n          </div>\n          <h1 className=\"projectTitle\">ReliefGrid</h1>\n        </div>\n        <SideNavBar handleNav={this.state.showNav}\n                    onHideNav={()=>this.setState({showNav:false})}\n                    buttonClick={this.handleButton}/>\n      </div>\n    )\n  }\n}\n\nexport default TopNavBar;\n","import React from 'react';\nimport './Home.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <body className = \"background\">\n        <div className = \"red\">\n          <h1 className = \"description\">A P2P System to Connect Citizens During Natural Disasters</h1>\n          <div className = \"flexbox\">\n            <div className = \"col\">\n              <FontAwesomeIcon icon = \"fire\" className = \"logo\" />\n              <h1>Fire Department</h1>\n            </div>\n            <div className = \"col\">\n              <FontAwesomeIcon icon = \"traffic-light\" className =\"logo\" />\n              <h1>Police Department</h1>\n              </div>\n            <div className = \"col\">\n              <FontAwesomeIcon icon = \"home\" className = \"logo\" />\n              <h1>Volunteer Responders</h1>\n            </div>\n          </div>\n        </div>\n        <div className = \"blurple\">\n          <p className=\"brief\">ReliefGrid is a network system designed to aid the rescue process during a natural disaster.</p>\n          <p className=\"work\">How It Works</p>\n          <p className=\"test\">During a natural disaster, almost always there is no internet present. Qualcomm's DragonBoards are able to host their own website; essentially a hotspot. If the main netowrk goes out, then the network of DragonBoards would be triggered to host their own series of hotspots. In need of help, the citizens would be able to post pictures of the incident and help for relief</p>\n          <br></br>\n          <p className=\"work\">Why?</p>\n          <p className=\"test\">Our goal with ReliefGrid is to help rescue squads and volunteers to locate people who need help, because of the damage that was done due to a natural disaster in their area.</p>\n        </div>\n      </body>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './Input.css';\n\nclass Input extends React.Component {\n  handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      if (event.target.value === \"\") {\n        alert('Please enter your incident!')\n      } else {\n        this.props.postIncident(event.target.value);\n        event.target.value = '';\n        event.preventDefault();\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <input\n          placeholder=\"What is your incident?\"\n          onKeyPress={this.handleKeyPress.bind(this)}\n          id='form'\n          required=\"required\" />\n      </div>\n    )\n  }\n}\n\nexport default Input;\n","import React from 'react';\nimport './Post.css';\n\nclass Post extends React.Component {\n  render() {\n    return (\n      <div className=\"post\">\n        {this.props.message}\n      </div>\n    )\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post.js';\n\nclass PostList extends React.Component {\n  render() {\n    return (\n      <div>\n      {\n        this.props.postList.map(message => {\n          return <Post message={message} />\n        })\n      }\n      </div>\n    )\n  }\n}\n\nexport default PostList;\n","import React from 'react'\nimport Input from \"./Input\";\nimport './Image.css';\n\nclass Image extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            file: null\n        };\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n    onFormSubmit(e){\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('myImage',this.state.file);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n    }\n    onChange(e) {\n        this.setState({file:e.target.files[0]});\n    }\n    render() {\n        return (\n            <form onSubmit={this.onFormSubmit}>\n                <h1>File Upload</h1>\n                <input type=\"file\" name=\"myImage\" onChange= {this.onChange} />\n                <button type=\"submit\">Upload</button>\n            </form>\n        )\n    }\n}\n\nexport default Image;\n","import React from 'react';\nimport './Forum.css';\nimport Input from '../Input/Input.js';\nimport PostList from '../PostList/PostList.js';\nimport Image from '../Input/Image.js';\n\n\nclass Forum extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n      postList: []\n    };\n    this.postIncident = this.postIncident.bind(this);\n  }\n\n  postIncident(e) {\n    let list = this.state.postList;\n    list.unshift(e);\n    this.setState({\n      postList: list\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Input postIncident={this.postIncident} />\n        <Image />\n        <PostList postList={this.state.postList} />\n      </div>\n    )\n  }\n}\n\nexport default Forum;\n","import React from 'react';\nimport './Post.css';\n\nclass Post extends React.Component {\n  render() {\n    return (\n      <div className=\"post\">\n        {this.props.message}\n      </div>\n    )\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post.js';\n\nclass PostList extends React.Component {\n  render() {\n    return (\n      <div>\n      {\n        this.props.postList.map(message => {\n          return <Post message={message} />\n        })\n      }\n      </div>\n    )\n  }\n}\n\nexport default PostList;\n","import React from 'react';\nimport './Announcements.css';\nimport PostList from '../PostList/PostList.js';\n\nclass Forum extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postList: ['Important Information']\n    };\n    this.postIncident = this.postIncident.bind(this);\n  }\n\n  postIncident(username,message) {\n    let list = this.state.postList;\n    list.unshift(message);\n    this.setState({\n      postList: list\n    })\n    this.socket.emit( 'my event', {\n      user_name : username,\n      message: message\n    } )\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <PostList postList={this.state.postList}/>\n      </div>\n    )\n  }\n}\n\nexport default Forum;\n","import React from 'react';\nimport './MedicalInfo.css';\n\nclass MedicalInfo extends React.Component {\n  render() {\n    return (\n      <div>\n        Medical\n      </div>\n    )\n  }\n}\n\nexport default MedicalInfo;\n","import React from 'react';\nimport Home from '../../Home/Home.js';\nimport Forum from '../../Forum/Forum/Forum.js';\nimport Announcements from '../../Announcements/Announcements/Announcements.js'\nimport MedicalInfo from '../../MedicalInfo/MedicalInfo.js'\n\nclass PageSelect extends React.Component {\n  pageSelect(p) {\n    if (p.showHome) {\n      return <Home />;\n    } else if (p.showForum) {\n      return <Forum />;\n    } else if (p.showAnnouncements) {\n      return <Announcements />;\n    } else if (p.showMedicalInfo) {\n      return <MedicalInfo />\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.props.selectPage.map(page => {\n          return this.pageSelect(page);\n        })\n      }\n      </div>\n    )\n  }\n}\n\nexport default PageSelect;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TopNavBar from './components/TopNavBar/TopNavBar/TopNavBar.js';\nimport PageSelect from './components/TopNavBar/PageSelect/PageSelect';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faFire, faTrafficLight, faHome } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faBars, faFire, faTrafficLight, faHome)\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNav: false,\n      show: [\n        {showHome: true},\n        {showAnnouncements: false},\n        {showForum: false},\n        {showMedicalInfo: false}\n      ]\n    };\n    this.selectHome = this.selectHome.bind(this);\n    this.selectAnnouncements = this.selectAnnouncements.bind(this);\n    this.selectForum = this.selectForum.bind(this);\n    this.selectMedicalInfo = this.selectMedicalInfo.bind(this);\n  }\n\n  selectHome() {\n    this.setState({\n      show: [\n        {showHome: true},\n        {showAnnouncements: false},\n        {showForum: false},\n        {showMedicalInfo: false}\n      ]\n    })\n  }\n\n  selectAnnouncements() {\n    this.setState({\n      show: [\n        {showHome: false},\n        {showAnnouncements: true},\n        {showForum: false},\n        {showMedicalInfo: false}\n      ]\n    })\n  }\n\n  selectForum() {\n    this.setState({\n      show: [\n        {showHome: false},\n        {showAnnouncements: false},\n        {showForum: true},\n        {showMedicalInfo: false}\n      ]\n    })\n  }\n\n  selectMedicalInfo() {\n    this.setState({\n      show: [\n        {showHome: false},\n        {showAnnouncements: false},\n        {showForum: false},\n        {showMedicalInfo: true}\n      ]\n    })\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <TopNavBar\n            clickHome={this.selectHome}\n            clickAnnouncements={this.selectAnnouncements}\n            clickForum={this.selectForum}\n            clickMedicalInfo={this.selectMedicalInfo}/>\n          <PageSelect selectPage={this.state.show} />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}